Carousel: e.querySelectorAll(".carousel:not(.no-autoinit)")

var s = this.$content; this.$activeTabLink = n, this.$content = a(M.escapeHash(n[0].hash)), this.$tabLinks = this.$el.children("li.tab").children("a"), this.$activeTabLink.addClass("active"); var o = this.index; this.index = Math.max(this.$tabLinks.index(n), 0), this.options.swipeable ? this._tabsCarousel && this._tabsCarousel.set(this.index, function () { "function" == typeof e.options.onShow && e.options.onShow.call(e, e.$content[0]) }) : this.$content.length && (this.$content[0].style.display = "block", this.$content.addClass("active"), "function" == typeof this.options.onShow && this.options.onShow.call(this, this.$content[0]), s.length && !s.is(this.$content) && (s[0].style.display = "none", s.removeClass("active"))), this._setTabsAndTabWidth(), this._animateIndicator(o), t.preventDefault()}}}, { key: "_createIndicator", value: function() { var t = this, e = document.createElement("li"); e.classList.add("indicator"), this.el.appendChild(e), this._indicator = e, setTimeout(function () { t._indicator.style.left = t._calcLeftPos(t.$activeTabLink) + "px", t._indicator.style.right = t._calcRightPos(t.$activeTabLink) + "px" }, 0) } }, { key: "_setupActiveTabLink", value: function() { this.$activeTabLink = a(this.$tabLinks.filter('[href="' + location.hash + '"]')), 0 === this.$activeTabLink.length && (this.$activeTabLink = this.$el.children("li.tab").children("a.active").first()), 0 === this.$activeTabLink.length && (this.$activeTabLink = this.$el.children("li.tab").children("a").first()), this.$tabLinks.removeClass("active"), this.$activeTabLink[0].classList.add("active"), this.index = Math.max(this.$tabLinks.index(this.$activeTabLink), 0), this.$activeTabLink.length && (this.$content = a(M.escapeHash(this.$activeTabLink[0].hash)), this.$content.addClass("active")) } }, { key: "_setupSwipeableTabs", value: function() { var i = this; window.innerWidth > this.options.responsiveThreshold && (this.options.swipeable = !1); var n = a(); this.$tabLinks.each(function (t) { var e = a(M.escapeHash(t.hash)); e.addClass("carousel-item"), n = n.add(e) }); var t = a('<div class="tabs-content carousel carousel-slider"></div>'); n.first().before(t), t.append(n), n[0].style.display = ""; var e = this.$activeTabLink.closest(".tab").index(); this._tabsCarousel = M.Carousel.init(t[0], { fullWidth: !0, noWrap: !0, onCycleTo: function (t) { var e = i.index; i.index = a(t).index(), i.$activeTabLink.removeClass("active"), i.$activeTabLink = i.$tabLinks.eq(i.index), i.$activeTabLink.addClass("active"), i._animateIndicator(e), "function" == typeof i.options.onShow && i.options.onShow.call(i, i.$content[0]) } }), this._tabsCarousel.set(e) } }, { key: "_teardownSwipeableTabs", value: function() { var t = this._tabsCarousel.$el; this._tabsCarousel.destroy() } }
return (n.el.M_Carousel = n).options = b.extend({}, i.defaults, e), n.hasMultipleSlides = 1 < n.$el.find(".carousel-item").length, n.showIndicators = n.options.indicators && n.hasMultipleSlides, n.noWrap = n.options.noWrap || !n.hasMultipleSlides, n.pressed = !1, n.dragged = !1, n.offset = n.target = 0, n.images = [], n.itemWidth = n.$el.find(".carousel-item").first().innerWidth(), n.itemHeight = n.$el.find(".carousel-item").first().innerHeight(), n.dim = 2 * n.itemWidth + n.options.padding || 1, n._autoScrollBound = n._autoScroll.bind(n), n._trackBound = n._track.bind(n), n.options.fullWidth && (n.options.dist = 0, n._setCarouselHeight(), n.showIndicators && n.$el.find(".carousel-fixed-item").addClass("with-indicators")), n.$indicators = b('<ul class="indicators"></ul>'), n.$el.find(".carousel-item").each(function (t, e) { if (n.images.push(t), n.showIndicators) { var i = b('<li class="indicator-item"></li>'); 0 === e && i[0].classList.add("active"), n.$indicators.append(i) } }), n.showIndicators && n.$el.append(n.$indicators), n.count = n.images.length, n.options.numVisible = Math.min(n.count, n.options.numVisible), n.xform = "transform", ["webkit", "Moz", "O", "ms"].every(function (t) { var e = t + "Transform"; return void 0 === document.body.style[e] || (n.xform = e, !1) }), n._setupEventHandlers(), n._scroll(n.offset), n}return _inherits(i, Component), _createClass(i, [{ key: "destroy", value: function () { this._removeEventHandlers(), this.el.M_Carousel = void 0 } }, { key: "_setupEventHandlers", value: function () { var i = this; this._handleCarouselTapBound = this._handleCarouselTap.bind(this), this._handleCarouselDragBound = this._handleCarouselDrag.bind(this), this._handleCarouselReleaseBound = this._handleCarouselRelease.bind(this), this._handleCarouselClickBound = this._handleCarouselClick.bind(this), void 0 !== window.ontouchstart && (this.el.addEventListener("touchstart", this._handleCarouselTapBound), this.el.addEventListener("touchmove", this._handleCarouselDragBound), this.el.addEventListener("touchend", this._handleCarouselReleaseBound)), this.el.addEventListener("mousedown", this._handleCarouselTapBound), this.el.addEventListener("mousemove", this._handleCarouselDragBound), this.el.addEventListener("mouseup", this._handleCarouselReleaseBound), this.el.addEventListener("mouseleave", this._handleCarouselReleaseBound), this.el.addEventListener("click", this._handleCarouselClickBound), this.showIndicators && this.$indicators && (this._handleIndicatorClickBound = this._handleIndicatorClick.bind(this), this.$indicators.find(".indicator-item").each(function (t, e) { t.addEventListener("click", i._handleIndicatorClickBound) })); var t = M.throttle(this._handleResize, 200); this._handleThrottledResizeBound = t.bind(this), window.addEventListener("resize", this._handleThrottledResizeBound) } }, { key: "_removeEventHandlers", value: function () { var i = this; void 0 !== window.ontouchstart && (this.el.removeEventListener("touchstart", this._handleCarouselTapBound), this.el.removeEventListener("touchmove", this._handleCarouselDragBound), this.el.removeEventListener("touchend", this._handleCarouselReleaseBound)), this.el.removeEventListener("mousedown", this._handleCarouselTapBound), this.el.removeEventListener("mousemove", this._handleCarouselDragBound), this.el.removeEventListener("mouseup", this._handleCarouselReleaseBound), this.el.removeEventListener("mouseleave", this._handleCarouselReleaseBound), this.el.removeEventListener("click", this._handleCarouselClickBound), this.showIndicators && this.$indicators && this.$indicators.find(".indicator-item").each(function (t, e) { t.removeEventListener("click", i._handleIndicatorClickBound) }), window.removeEventListener("resize", this._handleThrottledResizeBound) } }, { key: "_handleCarouselTap", value: function (t) { "mousedown" === t.type && b(t.target).is("img") && t.preventDefault(), this.pressed = !0, this.dragged = !1, this.verticalDragged = !1, this.reference = this._xpos(t), this.referenceY = this._ypos(t), this.velocity = this.amplitude = 0, this.frame = this.offset, this.timestamp = Date.now(), clearInterval(this.ticker), this.ticker = setInterval(this._trackBound, 100) } }, { key: "_handleCarouselDrag", value: function (t) { var e = void 0, i = void 0, n = void 0; if (this.pressed) if (e = this._xpos(t), i = this._ypos(t), n = this.reference - e, Math.abs(this.referenceY - i) < 30 && !this.verticalDragged) (2 < n || n < -2) && (this.dragged = !0, this.reference = e, this._scroll(this.offset + n)); else { if (this.dragged) return t.preventDefault(), t.stopPropagation(), !1; this.verticalDragged = !0 } if (this.dragged) return t.preventDefault(), t.stopPropagation(), !1 } }, { key: "_handleCarouselRelease", value: function (t) { if (this.pressed) return this.pressed = !1, clearInterval(this.ticker), this.target = this.offset, (10 < this.velocity || this.velocity < -10) && (this.amplitude = .9 * this.velocity, this.target = this.offset + this.amplitude), this.target = Math.round(this.target / this.dim) * this.dim, this.noWrap && (this.target >= this.dim * (this.count - 1) ? this.target = this.dim * (this.count - 1) : this.target < 0 && (this.target = 0)), this.amplitude = this.target - this.offset, this.timestamp = Date.now(), requestAnimationFrame(this._autoScrollBound), this.dragged && (t.preventDefault(), t.stopPropagation()), !1 } }, { key: "_handleCarouselClick", value: function (t) { if (this.dragged) return t.preventDefault(), t.stopPropagation(), !1; if (!this.options.fullWidth) { var e = b(t.target).closest(".carousel-item").index(); 0 !== this._wrap(this.center) - e && (t.preventDefault(), t.stopPropagation()), this._cycleTo(e) } } }, { key: "_handleIndicatorClick", value: function (t) { t.stopPropagation(); var e = b(t.target).closest(".indicator-item"); e.length && this._cycleTo(e.index()) } }, { key: "_handleResize", value: function (t) { this.options.fullWidth ? (this.itemWidth = this.$el.find(".carousel-item").first().innerWidth(), this.imageHeight = this.$el.find(".carousel-item.active").height(), this.dim = 2 * this.itemWidth + this.options.padding, this.offset = 2 * this.center * this.itemWidth, this.target = this.offset, this._setCarouselHeight(!0)) : this._scroll() } }, { key: "_setCarouselHeight", value: function (t) { var i = this, e = this.$el.find(".carousel-item.active").length ? this.$el.find(".carousel-item.active").first() : this.$el.find(".carousel-item").first(), n = e.find("img").first(); if (n.length) if (n[0].complete) { var s = n.height(); if (0 < s) this.$el.css("height", s + "px"); else { var o = n[0].naturalWidth, a = n[0].naturalHeight, r = this.$el.width() / o * a; this.$el.css("height", r + "px") } } else n.one("load", function (t, e) { i.$el.css("height", t.offsetHeight + "px") }); else if (!t) { var l = e.height(); this.$el.css("height", l + "px") } } }, { key: "_xpos", value: function (t) { return t.targetTouches && 1 <= t.targetTouches.length ? t.targetTouches[0].clientX : t.clientX } }, { key: "_ypos", value: function (t) { return t.targetTouches && 1 <= t.targetTouches.length ? t.targetTouches[0].clientY : t.clientY } }, { key: "_wrap", value: function (t) { return t >= this.count ? t % this.count : t < 0 ? this._wrap(this.count + t % this.count) : t } }, { key: "_track", value: function () { var t, e, i, n; e = (t = Date.now()) - this.timestamp, this.timestamp = t, i = this.offset - this.frame, this.frame = this.offset, n = 1e3 * i / (1 + e), this.velocity = .8 * n + .2 * this.velocity } }, { key: "_autoScroll", value: function () { var t = void 0, e = void 0; this.amplitude && (t = Date.now() - this.timestamp, 2 < (e = this.amplitude * Math.exp(-t / this.options.duration)) || e < -2 ? (this._scroll(this.target - e), requestAnimationFrame(this._autoScrollBound)) : this._scroll(this.target)) } }, { key: "_scroll", value: function (t) { var e = this; this.$el.hasClass("scrolling") || this.el.classList.add("scrolling"), null != this.scrollingTimeout && window.clearTimeout(this.scrollingTimeout), this.scrollingTimeout = window.setTimeout(function () { e.$el.removeClass("scrolling") }, this.options.duration); var i, n, s, o, a = void 0, r = void 0, l = void 0, h = void 0, d = void 0, u = void 0, c = this.center, p = 1 / this.options.numVisible; if (this.offset = "number" == typeof t ? t : this.offset, this.center = Math.floor((this.offset + this.dim / 2) / this.dim), o = -(s = (n = this.offset - this.center * this.dim) < 0 ? 1 : -1) * n * 2 / this.dim, i = this.count >> 1, this.options.fullWidth ? (l = "translateX(0)", u = 1) : (l = "translateX(" + (this.el.clientWidth - this.itemWidth) / 2 + "px) ", l += "translateY(" + (this.el.clientHeight - this.itemHeight) / 2 + "px)", u = 1 - p * o), this.showIndicators) { var v = this.center % this.count, f = this.$indicators.find(".indicator-item.active"); f.index() !== v && (f.removeClass("active"), this.$indicators.find(".indicator-item").eq(v)[0].classList.add("active")) } if (!this.noWrap || 0 <= this.center && this.center < this.count) { r = this.images[this._wrap(this.center)], b(r).hasClass("active") || (this.$el.find(".carousel-item").removeClass("active"), r.classList.add("active")); var m = l + " translateX(" + -n / 2 + "px) translateX(" + s * this.options.shift * o * a + "px) translateZ(" + this.options.dist * o + "px)"; this._updateItemStyle(r, u, 0, m) } for (a = 1; a <= i; ++a) { if (this.options.fullWidth ? (h = this.options.dist, d = a === i && n < 0 ? 1 - o : 1) : (h = this.options.dist * (2 * a + o * s), d = 1 - p * (2 * a + o * s)), !this.noWrap || this.center + a < this.count) { r = this.images[this._wrap(this.center + a)]; var g = l + " translateX(" + (this.options.shift + (this.dim * a - n) / 2) + "px) translateZ(" + h + "px)"; this._updateItemStyle(r, d, -a, g) } if (this.options.fullWidth ? (h = this.options.dist, d = a === i && 0 < n ? 1 - o : 1) : (h = this.options.dist * (2 * a - o * s), d = 1 - p * (2 * a - o * s)), !this.noWrap || 0 <= this.center - a) { r = this.images[this._wrap(this.center - a)]; var _ = l + " translateX(" + (-this.options.shift + (-this.dim * a - n) / 2) + "px) translateZ(" + h + "px)"; this._updateItemStyle(r, d, -a, _) } } if (!this.noWrap || 0 <= this.center && this.center < this.count) { r = this.images[this._wrap(this.center)]; var y = l + " translateX(" + -n / 2 + "px) translateX(" + s * this.options.shift * o + "px) translateZ(" + this.options.dist * o + "px)"; this._updateItemStyle(r, u, 0, y) } var k = this.$el.find(".carousel-item").eq(this._wrap(this.center)); c !== this.center && "function" == typeof this.options.onCycleTo && this.options.onCycleTo.call(this, k[0], this.dragged), "function" == typeof this.oneTimeCallback && (this.oneTimeCallback.call(this, k[0], this.dragged), this.oneTimeCallback = null) } }, { key: "_updateItemStyle", value: function (t, e, i, n) { t.style[this.xform] = n, t.style.zIndex = i, t.style.opacity = e, t.style.visibility = "visible" } }, { key: "_cycleTo", value: function (t, e) { var i = this.center % this.count - t; this.noWrap || (i < 0 ? Math.abs(i + this.count) < Math.abs(i) && (i += this.count) : 0 < i && Math.abs(i - this.count) < i && (i -= this.count)), this.target = this.dim * Math.round(this.offset / this.dim), i < 0 ? this.target += this.dim * Math.abs(i) : 0 < i && (this.target -= this.dim * i), "function" == typeof e && (this.oneTimeCallback = e), this.offset !== this.target && (this.amplitude = this.target - this.offset, this.timestamp = Date.now(), requestAnimationFrame(this._autoScrollBound)) } }, { key: "next", value: function (t) { (void 0 === t || isNaN(t)) && (t = 1); var e = this.center + t; if (e >= this.count || e < 0) { if (this.noWrap) return; e = this._wrap(e) } this._cycleTo(e) } }, { key: "prev", value: function (t) { (void 0 === t || isNaN(t)) && (t = 1); var e = this.center - t; if (e >= this.count || e < 0) { if (this.noWrap) return; e = this._wrap(e) } this._cycleTo(e) } }, { key: "set", value: function (t, e) { if ((void 0 === t || isNaN(t)) && (t = 0), t > this.count || t < 0) { if (this.noWrap) return; t = this._wrap(t) } this._cycleTo(t, e) } }], [{ key: "init", value: function (t, e) { return _get(i.__proto__ || Object.getPrototypeOf(i), "init", this).call(this, this, t, e) } }, { key: "getInstance", value: function (t) { return (t.jquery ? t[0] : t).M_Carousel } }, { key: "defaults", get: function () { return e } }]), i}(); M.Carousel = t, M.jQueryLoaded && M.initializeJqueryWrapper(t, "carousel", "M_Carousel")}
